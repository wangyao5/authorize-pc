angular.module("app.controller", [])    .controller('company', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service) {          $scope.companyArray = [];          service.getCompany().then(function(data){            angular.forEach(data, function(item, index){              data[index]['index']= index;            });            $scope.companyArray = data;          });          var bCompanyArray = [];          $scope.search = function(searchText){            if(!searchText && bCompanyArray.length>0) {              $scope.companyArray = bCompanyArray;            }            var searchResult = [];            angular.forEach($scope.companyArray, function(item, index){                if (item.name.indexOf(searchText) > -1) {                    item.index = index;                    searchResult.push(item);                }            });            bCompanyArray = $scope.companyArray;            $scope.companyArray = searchResult;          };          $scope.switch = function(index) {             $scope.companyArray[index].editer = true;          };          $scope.add = function() {            $scope.companyArray.push({name:'', index:$scope.companyArray.length, ableSave:true});          };          $scope.save = function() {              var checkSaveArray = [];              var checkedIndexs = [];              angular.forEach($scope.companyArray, function(item,index){                if (item.checked) {                  checkSaveArray.push(item);                  checkedIndexs.push(index);                }              });              if (checkedIndexs.length<=0) {                return;              }              service.saveCompany(checkSaveArray).then(function(data){                angular.forEach(checkedIndexs, function(item,index){                  $scope.companyArray[item] = data[index];                })              });          };          $scope.edited = function(editeItemIndex){            if (!$scope.companyArray[editeItemIndex].ableSave) {              $scope.companyArray[editeItemIndex].ableSave = true;              return;            }            angular.forEach($scope.companyArray,function(item,index){              if (editeItemIndex != index) {                if (item.name == $scope.companyArray[editeItemIndex].name) {                  alert("编辑了重复的公司名");                  $scope.companyArray[editeItemIndex].ableSave = false;                }              }            });          }    }])    .controller('wfop', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service) {        var hasWorkFlowOpArray = [];        service.getWorkFlowOp().then(function(data){            angular.forEach(data, function(item,index){                data[index]['index'] = index;            });            hasWorkFlowOpArray = data;            $scope.workFlowOpArray = data;        });        $scope.currentWorkFlowNameDisplay = "全部";        service.getWorkFlowName().then(function(data) {            $scope.workFlowNameArray = data;        });        $scope.currentWorkFlowbCategoryDisplay = "全部";        var currentWorkFlowbCategoryArray = [];        var hasWorkFlowbCategoryArray = [];        service.getWorkFlowBCategory().then(function(data){            hasWorkFlowbCategoryArray = data;            initWorkFlowbCategory(hasWorkFlowbCategoryArray);        });        $scope.currentWorkFlowlCategoryDisplay = "全部";        var currentWorkFlowlCategoryArray = [];        var hasWorkFLowlCategoryArray = [];        service.getWorkFlowLCategory().then(function(data){            hasWorkFLowlCategoryArray = data;            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        });        $scope.workFlowNameChecked = function(index){            $scope.currentWorkFlowNameDisplay = $scope.workFlowNameArray[index];            $scope.currentWorkFlowbCategoryDisplay = "全部";            $scope.currentWorkFlowlCategoryDisplay = "全部";            initWorkFlowbCategory(hasWorkFlowbCategoryArray);            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        };        $scope.workFlowbCategoryChecked = function(index){            $scope.currentWorkFlowbCategoryDisplay = $scope.workFlowbCategoryArray[index];        };        $scope.workFlowlCategoryChecked = function(index){            $scope.currentWorkFlowlCategoryDisplay = $scope.workFlowlCategoryArray[index];        };        $scope.search = function(workFlowName, workFlowbCategory, workFlowlCategory) {            var workFlowNameFilter = [];            var workFlowbCategoryFilter = [];            var finalRet = [];            if (workFlowName == "全部") {                workFlowNameFilter = hasWorkFlowOpArray;            } else {                hasWorkFlowOpArray.forEach(function(item){                    if (item.workFlowName == workFlowName) {                        workFlowNameFilter.push(item);                    }                })            }            if (workFlowbCategory == "全部") {                workFlowbCategoryFilter = workFlowNameFilter;            } else {                workFlowNameFilter.forEach(function(item){                    if (item.bCategory == workFlowbCategory) {                        workFlowbCategoryFilter.push(item);                    }                })            }            if (workFlowlCategory == "全部") {                finalRet = workFlowbCategoryFilter;            } else {                workFlowbCategoryFilter.forEach(function(item){                    if (item.lCategory == workFlowlCategory) {                        finalRet.push(item);                    }                })            }            $scope.workFlowOpArray = finalRet;        };        $scope.reset = function() {            $scope.currentWorkFlowNameDisplay = "全部";            $scope.currentWorkFlowbCategoryDisplay = "全部";            $scope.currentWorkFlowlCategoryDisplay = "全部";            $scope.workFlowOpArray = hasWorkFlowOpArray;        };        $scope.add = function() {            $scope.workFlowOpArray.push({workFlowName:'', bCategory:'', lCategory:'', index:$scope.workFlowOpArray.length, ableSave:true});        };        $scope.save = function() {            var checkSaveArray = [];            var checkedIndexs = [];            angular.forEach($scope.workFlowOpArray, function(item,index){                if (item.checked) {                  checkSaveArray.push(item);                  checkedIndexs.push(index);                }            });            if (checkedIndexs.length<=0) {                 return;            }            service.saveWorkFlow(checkSaveArray).then(function(data){                angular.forEach(checkedIndexs, function(item,index){                  $scope.workFlowOpArray[item] = data[index];                })            });            service.getWorkFlowOp().then(function(data){                angular.forEach(data, function(item,index){                    data[index]['index'] = index;                });                $scope.workFlowOpArray = data;            });            $scope.currentWorkFlowNameDisplay = "全部";            service.getWorkFlowName().then(function(data) {                $scope.workFlowNameArray = data;            });            $scope.currentWorkFlowbCategoryDisplay = "全部";            var hasWorkFlowbCategoryArray = [];            service.getWorkFlowBCategory().then(function(data){                hasWorkFlowbCategoryArray = data;                initWorkFlowbCategory(hasWorkFlowbCategoryArray);            });            $scope.currentWorkFlowlCategoryDisplay = "全部";            var hasWorkFLowlCategoryArray = [];            service.getWorkFlowLCategory().then(function(data){                hasWorkFLowlCategoryArray = data;                initWorkFlowlCategory(hasWorkFLowlCategoryArray);            });        };        $scope.switch = function(index) {            $scope.workFlowOpArray[index].editer = true;        };        $scope.edited = function(editeItemIndex){            if (!$scope.workFlowOpArray[editeItemIndex].ableSave) {              $scope.workFlowOpArray[editeItemIndex].ableSave = true;              return;            }            angular.forEach($scope.workFlowOpArray,function(item,index){              if (editeItemIndex != index) {                if (item.workFlowName == $scope.workFlowOpArray[editeItemIndex].workFlowName &&                    item.bCategory == $scope.workFlowOpArray[editeItemIndex].bCategory &&                    item.lCategory == $scope.workFlowOpArray[editeItemIndex].lCategory) {                    alert("编辑了重复的基础数据");                    $scope.workFlowOpArray[editeItemIndex].ableSave = false;                }              }            })        };        var initWorkFlowbCategory = function(workFlowbCategoryArray) {            angular.forEach(workFlowbCategoryArray, function(item){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    currentWorkFlowbCategoryArray = item.bCategory;                }            });            $scope.workFlowbCategoryArray = currentWorkFlowbCategoryArray;        };        var initWorkFlowlCategory = function(workFlowlCategoryArray) {            angular.forEach(workFlowlCategoryArray, function(item){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    currentWorkFlowlCategoryArray = item.lCategory;                }            });            $scope.workFlowlCategoryArray = currentWorkFlowlCategoryArray;        }    }])    .controller('search', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service) {        $scope.checkedVp = "全部";        service.getVp().then(function(data){            $scope.vpArray = data;        });        service.searchAuthorize().then(function(data){            $scope.authorize = data;        });        $scope.vpChecked = function(index) {            $scope.checkedVp = $scope.vpArray[index].name;        };        $scope.currentWorkFlowNameDisplay = "全部";        service.getWorkFlowName().then(function(data) {            $scope.workFlowNameArray = data;        });        $scope.workFlowNameChecked = function(index){            $scope.currentWorkFlowNameDisplay = $scope.workFlowNameArray[index];            initWorkFlowbCategory(hasWorkFlowbCategoryArray);            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        };        $scope.currentWorkFlowbCategoryDisplay = "全部";        var hasWorkFlowbCategoryArray = []        service.getWorkFlowBCategory().then(function(data){            hasWorkFlowbCategoryArray = data;            initWorkFlowbCategory(hasWorkFlowbCategoryArray);        });        $scope.currentWorkFlowlCategoryDisplay = "全部";        var hasWorkFLowlCategoryArray = [];        service.getWorkFlowLCategory().then(function(data){            hasWorkFLowlCategoryArray = data;            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        });        $scope.workFlowbCategoryChecked = function(index){            $scope.currentWorkFlowbCategoryDisplay = $scope.workFlowbCategoryArray[index];        };        $scope.workFlowlCategoryChecked = function(index){            $scope.currentWorkFlowlCategoryDisplay = $scope.workFlowlCategoryArray[index];        };        var initWorkFlowbCategory = function(workFlowbCategoryArray){            angular.forEach(workFlowbCategoryArray, function(item){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    $scope.workFlowbCategoryArray = item.bCategory;                }            });        };        var initWorkFlowlCategory = function(workFlowlCategoryArray){            angular.forEach(workFlowlCategoryArray, function(item, index, array){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    $scope.workFlowlCategoryArray = item.lCategory;                }            });        };    }])    .controller('userop', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service){        service.getUser().then(function(data){            $scope.userArray = data;        });        $scope.addUser = function(){            $scope.userArray.push({name:'', uid:'', uno:'', permission:"0", edit:true});        };        $scope.save = function(index){            service.saveUser($scope.userArray[index]);        };        $scope.search = function(searchText){            service.searchUser(searchText).then(function (data) {                $scope.userArray = data;            });        };        $scope.del = function (index) {            if ($scope.userArray[index].id){                service.delUser($scope.userArray[index].id);            }            $scope.userArray.splice(index, 1);        };    }])    .controller('authorize', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service){        $scope.userName = window.userName;        $scope.role = window.role;        service.getWorkFlowOp().then(function(data){            angular.forEach(data, function(item,index,array){                  data[index]['index'] = index;            });            $scope.workFlowOpArray = data;        });        $scope.currentWorkFlowNameDisplay = "全部";        var hasWorkFlowNameArray = [];        service.getWorkFlowName().then(function(data) {            hasWorkFlowNameArray = data;            $scope.workFlowNameArray = hasWorkFlowNameArray;        });         $scope.currentWorkFlowbCategoryDisplay = "全部";        var hasWorkFlowbCategoryArray = [];        service.getWorkFlowBCategory().then(function(data){            hasWorkFlowbCategoryArray = data;            initWorkFlowbCategory(hasWorkFlowbCategoryArray);        });        $scope.currentWorkFlowlCategoryDisplay = "全部";        var hasWorkFLowlCategoryArray = [];        service.getWorkFlowLCategory().then(function(data){            hasWorkFLowlCategoryArray = data;            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        });        if(window.role == 2) {            $scope.currentCompanyDisplay = "全部";            service.getCompany().then(function(data){                $scope.companyArray = data;            });        }        var hasWorkFlowOp = [];        service.getWorkFlowOp().then(function(data){            angular.forEach(data, function(item,index){                item['index'] = index;                hasWorkFlowOp.push(item);            });            $scope.workFlowOp = hasWorkFlowOp;        });        $scope.workFlowNameChecked = function(index){            $scope.currentWorkFlowNameDisplay = $scope.workFlowNameArray[index];            $scope.currentWorkFlowbCategoryDisplay = "全部";            $scope.currentWorkFlowlCategoryDisplay = "全部";            initWorkFlowbCategory(hasWorkFlowbCategoryArray);            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        };        $scope.workFlowbCategoryChecked = function(index){            $scope.currentWorkFlowbCategoryDisplay = $scope.workFlowbCategoryArray[index];        };        $scope.workFlowlCategoryChecked = function(index){            $scope.currentWorkFlowlCategoryDisplay = $scope.workFlowlCategoryArray[index];        };        $scope.companyChecked = function(index){            $scope.currentCompanyDisplay = $scope.companyArray[index].name;        };        service.queryAuthorize().then(function(data) {            $scope.authorizeArray = data;        });        $scope.setDefVaule = function(index) {            var workFlowName = $scope.authorizeArray[index]['workFlowName'];            var amount = $scope.authorizeArray[index]['amount'];            var params = [{"workFlowName":workFlowName, 'bCategory': "全部", 'lCategory': "全部", 'amount':amount}];            service.saveAuthorize(params);        };        $scope.add = function(index) {            $scope.authorizeArray[index].authorize.push({bCategory:"全部",lCategory:"全部",company:"全部",amount:0, edited:true, ableSave:false});        };        $scope.save = function(index){            var params = [];            angular.forEach($scope.authorizeArray[index].authorize, function(item, index){                if (item.ableSave) {                    item['index'] = index;                    params.push(item);                }            });            service.saveAuthorize(params).then(function(data){                angular.forEach(data, function(item){                    item.edited = false;                    item.ableSave = false;                    $scope.authorizeArray[index].authorize[item.index] = item;                });            });        };        $scope.search = function(workFlowName, workFlowbCategroy, workFlowlCategory){            var param = {"workFlowName":workFlowName,"bCategory":workFlowbCategroy,"lCategory":workFlowlCategory,"company":""};            service.queryAuthorize(param).then(function(data){                $scope.authorizeArray = data;            });        };        $scope.reset = function(){            $scope.currentWorkFlowNameDisplay = "全部";            $scope.currentWorkFlowbCategoryDisplay = "全部";            $scope.currentWorkFlowlCategoryDisplay = "全部";            $scope.currentCompanyDisplay = "全部";        };        $scope.getbCategoryOptions = function(workFlowName) {            var result = [];            angular.forEach(hasWorkFlowbCategoryArray, function(item){                if (item.workFlowName == workFlowName) {                    result = item.bCategory;                }            });            return result;        };        $scope.getlCategoryOptions = function(workFlowName) {            var result = [];            angular.forEach(hasWorkFLowlCategoryArray, function(item){                if (item.workFlowName == workFlowName) {                    result = item.lCategory;                }            });            return result;        };        $scope.changeWorkFlowbCategoryOption = function(authorize, index, workFlowbCategroy) {            authorize[index]['bCategoryChanged'] = true;            if (ableSave(authorize, index)) {                authorize[index].bCategory = workFlowbCategroy;            }        };        $scope.changeWorkFlowlCategoryOption = function(authorize, index, workFlowlCategroy) {            authorize[index]['lCategoryChanged'] = true;            if (ableSave(authorize, index)) {                authorize[index].lCategory = workFlowlCategroy;            }        };        $scope.changeCompanyOption = function(authorize, index, company){            authorize[index]['companyChanged'] = true;            if (ableSave(authorize, index)) {                authorize[index].company = company;            }        };        $scope.amountChanged = function(authorize, index) {            if (ableSave(authorize,index)) {                authorize[index]['ableSave'] = true;            }        };        var ableSave = function(authorize, index) {            var currentAuthorize = authorize[index];            for (var authorizeIndex = 0; authorizeIndex < authorize.length; authorizeIndex++) {                var item = authorize[authorizeIndex];                if (index != authorizeIndex) {                    if (window.role == 2) {                        if (currentAuthorize['bCategoryChanged'] && currentAuthorize['lCategoryChanged'] && currentAuthorize['companyChanged']) {                            if (item.bCategory == currentAuthorize.bCategory && item.lCategory == currentAuthorize.lCategory && item.company == currentAuthorize.company) {                                alert("已配置");                                return false;                            }                        }                    } else {                        if (currentAuthorize['bCategoryChanged'] && currentAuthorize['lCategoryChanged']) {                            if (item.bCategory == currentAuthorize.bCategory && item.lCategory == currentAuthorize.lCategory) {                                alert("已配置");                                return false;                            }                        }                    }                }            }            return true;        };        var initWorkFlowbCategory = function(workFlowbCategoryArray){            angular.forEach(workFlowbCategoryArray, function(item){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    $scope.workFlowbCategoryArray = item.bCategory;                }            });        };        var initWorkFlowlCategory = function(workFlowlCategoryArray){            angular.forEach(workFlowlCategoryArray, function(item){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    $scope.workFlowlCategoryArray = item.lCategory;                }            });        };    }]);