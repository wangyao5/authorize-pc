angular.module("app.controller", [])    .controller('index', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service) {          console.log("into index");    }])    .controller('company', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service) {          var hasCompanyArray = [];          service.getCompany().then(function(data){              angular.forEach(data, function(item,index,array){                  item['index'] = index;                  hasCompanyArray.push(item);              });            $scope.companyArray = hasCompanyArray;          });          $scope.search = function(searchText){              var searchResult = [];              angular.forEach(hasCompanyArray.concat(addCompanyArray), function(item, index, array){                  if (item.name.indexOf(searchText) > -1) {                      item.index = index;                      searchResult.push(item);                  }              });              $scope.companyArray = searchResult;          }          $scope.switch = function(index) {             $scope.companyArray[index].editer = true;          }          var addCompanyArray = [];          $scope.add = function() {            var currentIndex = hasCompanyArray.length + addCompanyArray.length;            addCompanyArray.push({name:'', index:currentIndex, ableSave:true});            $scope.companyArray = hasCompanyArray.concat(addCompanyArray);          }          $scope.save = function() {          }          $scope.edited = function(index){            checkIsAdded(index);            if(index < hasCompanyArray.length) {                hasCompanyArray[index].ableSave = true;            }          }          var checkIsAdded = function(editeItemIndex) {              if (editeItemIndex < hasCompanyArray.length) {                if (hasCompanyArray[editeItemIndex] == $scope.companyArray[editeItemIndex]) {                    $scope.companyArray[editeItemIndex].editer = false;                }              }              var allCompany = hasCompanyArray.concat(addCompanyArray);              angular.forEach(allCompany, function(item, index, array){                  if (editeItemIndex != index) {                      if (item.name == allCompany[editeItemIndex].name) {                          alert("hasCompany");                      }                  }              });          }    }])    .controller('wfop', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service) {        var hasWorkFlowOpArray = []        service.getWorkFlowOp().then(function(data){            angular.forEach(data, function(item,index,array){                  item['index'] = index;                  hasWorkFlowOpArray.push(item);              });             $scope.workFlowOpArray = hasWorkFlowOpArray;        });        $scope.currentWorkFlowNameDisplay = "全部";        var hasWorkFlowNameArray = [];        service.getWorkFlowName().then(function(data) {            hasWorkFlowNameArray = data;            $scope.workFlowNameArray = hasWorkFlowNameArray;        })        $scope.currentWorkFlowbCategoryDisplay = "全部";        var currentWorkFlowbCategory = [];        var hasWorkFlowbCategoryArray = [];        service.getWorkFlowBCategory().then(function(data){            hasWorkFlowbCategoryArray = data;            initWorkFlowbCategory(hasWorkFlowbCategoryArray);        })        $scope.currentWorkFlowlCategoryDisplay = "全部";        var currentWorkFlowlCategoryArray = [];        var hasWorkFLowlCategoryArray = [];        service.getWorkFlowLCategory().then(function(data){            hasWorkFLowlCategoryArray = data;            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        })        var hasWorkFlowOp = [];        service.getWorkFlowOp().then(function(data){            angular.forEach(data, function(item,index,array){                  item['index'] = index;                  hasWorkFlowOp.push(item);              });            $scope.workFlowOp = hasWorkFlowOp;        });        $scope.workFlowNameChecked = function(index){            $scope.currentWorkFlowNameDisplay = $scope.workFlowNameArray[index];            $scope.currentWorkFlowbCategoryDisplay = "全部";            $scope.currentWorkFlowlCategoryDisplay = "全部";            initWorkFlowbCategory(hasWorkFlowbCategoryArray);            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        }        $scope.workFlowbCategoryChecked = function(index){            $scope.currentWorkFlowbCategoryDisplay = $scope.workFlowbCategoryArray[index];        }        $scope.workFlowlCategoryChecked = function(index){            $scope.currentWorkFlowlCategoryDisplay = $scope.workFlowlCategoryArray[index];        }        $scope.search = function(workFlowName, workFlowbCategory, workFlowlCategory) {            console.log("workFlowName:" + workFlowName);            console.log("workFlowbCategory:" + workFlowbCategory);            console.log("workFlowlCategory:" + workFlowlCategory);        }        $scope.reset = function() {            $scope.currentWorkFlowNameDisplay = "全部";            $scope.currentWorkFlowbCategoryDisplay = "全部";            $scope.currentWorkFlowlCategoryDisplay = "全部";        }        var addWorkFlowOpArray = []        $scope.add = function() {            var currentIndex = hasWorkFlowOpArray.length + addWorkFlowOpArray.length;            addWorkFlowOpArray.push({workFlowName:'', bCategory:'', lCategory:'', index:currentIndex, ableSave:true});            $scope.workFlowOpArray = hasWorkFlowOpArray.concat(addWorkFlowOpArray);        }        $scope.save = function() {                    }        $scope.switch = function(index) {            $scope.workFlowOpArray[index].editer = true;        }        $scope.edited = function(index) {            checkIsAdded(index);            if(index < hasWorkFlowOpArray.length) {                hasWorkFlowOpArray[index].ableSave = true;            }        }        var initWorkFlowbCategory = function(workFlowbCategoryArray) {            angular.forEach(workFlowbCategoryArray, function(item, index, array){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    currentWorkFlowbCategoryArray = item.bCategory;                    return;                }            });            $scope.workFlowbCategoryArray = currentWorkFlowbCategoryArray;        }        var initWorkFlowlCategory = function(workFlowlCategoryArray) {            angular.forEach(workFlowlCategoryArray, function(item, index, array){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    currentWorkFlowlCategoryArray = item.lCategory;                    return;                }            });            $scope.workFlowlCategoryArray = currentWorkFlowlCategoryArray;        }        var checkIsAdded = function(editeItemIndex) {              if (editeItemIndex < hasWorkFlowOpArray.length) {                if (hasWorkFlowOpArray[editeItemIndex] == $scope.workFlowOpArray[editeItemIndex]) {                    $scope.workFlowOpArray[editeItemIndex].editer = false;                }              }              var allWorkFlowOpArray = hasWorkFlowOpArray.concat(addWorkFlowOpArray);              angular.forEach(allWorkFlowOpArray, function(item, index, array){                  if (editeItemIndex != index) {                      if (item.workFlowName == allWorkFlowOpArray[editeItemIndex].workFlowName && item.bCategory == allWorkFlowOpArray[editeItemIndex].bCategory && item.lCategory == allWorkFlowOpArray[editeItemIndex].lCategory) {                          alert("duplicated");                      }                  }              });          }    }])    .controller('search', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service) {        $scope.checkedVp = "全部";        service.getVp().then(function(data){            $scope.vpArray = data;        })        service.queryAuthorize().then(function(data){            $scope.authorize = data;        });        $scope.vpChecked = function(index) {            $scope.checkedVp = $scope.vpArray[index];        }        $scope.currentWorkFlowNameDisplay = "全部";        service.getWorkFlowName().then(function(data) {            $scope.workFlowNameArray = data;        })        $scope.workFlowNameChecked = function(index){            $scope.currentWorkFlowNameDisplay = $scope.workFlowNameArray[index];            initWorkFlowbCategory(hasWorkFlowbCategoryArray);            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        }        $scope.currentWorkFlowbCategoryDisplay = "全部";        var hasWorkFlowbCategoryArray = []        service.getWorkFlowBCategory().then(function(data){            hasWorkFlowbCategoryArray = data;            initWorkFlowbCategory(hasWorkFlowbCategoryArray);        })        $scope.currentWorkFlowlCategoryDisplay = "全部";        var hasWorkFLowlCategoryArray = [];        service.getWorkFlowLCategory().then(function(data){            hasWorkFLowlCategoryArray = data;            initWorkFlowlCategory(hasWorkFLowlCategoryArray);        })        $scope.workFlowbCategoryChecked = function(index){            $scope.currentWorkFlowbCategoryDisplay = $scope.workFlowbCategoryArray[index];        }        $scope.workFlowlCategoryChecked = function(index){            $scope.currentWorkFlowlCategoryDisplay = $scope.workFlowlCategoryArray[index];        }        var initWorkFlowbCategory = function(workFlowbCategoryArray){            var currentWorkFlowbCategoryArray = [];            angular.forEach(workFlowbCategoryArray, function(item, index, array){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    $scope.workFlowbCategoryArray = item.bCategory;                    return;                }            });        }        var initWorkFlowlCategory = function(workFlowlCategoryArray){            var currentWorkFlowlCategoryArray = [];            angular.forEach(workFlowlCategoryArray, function(item, index, array){                if (item.workFlowName == $scope.currentWorkFlowNameDisplay) {                    $scope.workFlowlCategoryArray = item.lCategory;                    return;                }            });        }     }])    .controller('userop', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service){        var hasUserArray = [];        service.getUser().then(function(data){            hasUserArray = data;            $scope.userArray = hasUserArray;        });        var addUser = [];        $scope.addUser = function(){            console.log("addUser");        }        $scope.save = function(){            console.log("save");        }        $scope.search = function(searchText){            console.log(searchText);        }    }])    .controller('authorize', ['$scope', '$state', '$stateParams', 'service', function($scope, $state, $stateParams, service){        var hasUserArray = [];        service.getUser().then(function(data){            hasUserArray = data;            $scope.userArray = hasUserArray;        });        var addUser = [];        $scope.addUser = function(){            console.log("addUser");        }        $scope.save = function(){            console.log("save");        }        $scope.search = function(searchText){            console.log(searchText);        }    }]);